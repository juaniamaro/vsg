*Forma de codigo:
.filtro {filter: url(cosasguays#filtro1);}
.filtro {filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id="idguay">-filtro aquí-</filter></svg>#idguay");}
------------------------------------------------------------------------
*Filtro gris:
.jimggris{filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='jfgris'><feColorMatrix type='matrix' values='0.33 0.33 0.33 0 0 0.33 0.33 0.33 0 0 0.33 0.33 0.33 0 0 0 0 0 1 0' /></filter></svg>#jfgris");}
*Sepia:
.jimgsepc {filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='jfsepiac'><feColorMatrix type='matrix' values='0.97 0 0 0 0 0.8 0 0 0 0 0.5 0 0 0 0 0 0 0 1 0' /></filter></svg>#jfsepiac");}
*Desenfoque:
.jimgblur {filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='jfblur'><feGaussianBlur stdDeviation='X Y' /></filter></svg>#jfblur");}
Donde debes remplazar la X y la Y por un numero. Este número definirá la cantidad de blur a añadir en el eje X e Y, respectivamente.
*Brillo:
.jimgbright {filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='jfbright'><feComponentTransfer><feFuncR type='linear' slope='X'/><feFuncG type='linear' slope='X'/><feFuncB type='linear' slope='X'/></feComponentTransfer></filter></svg>#jfbright");}
Donde X debe ser un número que definirá el brillo (los tres números deben ser los mismos).
*Giro de color:
.jimghue {filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='jfhue'><feColorMatrix type='hueRotate' values='XX'/></filter></svg>#jfhue");}
Donde XX debe ser un número entre el 0 y el 360. El ejemplo está a 180 (media vuelta).
*Saturación:
.jimgsat {filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='jfsat'><feColorMatrix type='saturate' values='X'/></filter></svg>#jfsat");}
Donde X debe ser un número entre el 0 y el 1 (el 1 mantén la imagen normal y el 0 es lo mismo que el grayscale dado más arriba). El ejemplo se encuentra en 0.5
*Contraste:
.jimgcont {filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='jfcont'><feComponentTransfer><feFuncR type='linear' slope='X' intercept=' -(0.5 * X) + 0.5' /><feFuncG type='linear' slope=' -(0.5 * X) + 0.5' intercept=' -(0.5 * X) + 0.5' /><feFuncB type='linear' slope='X' intercept=' -(0.5 * X) + 0.5' /></feComponentTransfer></filter></svg>#jfcont");}
Sí, eso de ahí es una formula, limitaos a seguirla y todo quedará bien ;)El ejemplo tiene un "slope" de 2 y, por tanto, un intercept de -0.5
*Invertir:
.jimginv {filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='jfinv'><feComponentTransfer><feFuncR type='table' tableValues='1 0' /><feFuncG type='table' tableValues='1 0' /><feFuncB type='table' tableValues='1 0' /></feComponentTransfer></filter></svg>#jfinv");}
